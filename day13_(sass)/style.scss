@import "reset";

// MIXIN
@mixin btn($width:100px, $bgColor:#555, $fontColor: white) {
    display: block;
    width: $width;
    height: 30px;
    border-radius: 15px;
    background-color: $bgColor;
    color: $fontColor;
    text-align: center;
    font: bold 16px/30px "arial";
    margin-top: 20px;
}


//color set
//wrap
$bodyBgColor: #eee;
$itemBgColor: #fff;
$itemHoverBgColor: #c8c8c8;
$boxBgColor: rgba(0,0,0,0.1);


//animation
$interval: .1s;


body {
    background-color: #c8c8c8;

    .wrap {
        width: 100%;
        border-bottom: 2px solid black;
        padding: 100px;
        display: flex;
        justify-content: center;
        perspective: 600px;

        &:hover {
            .item {
                transform: translate(0px, 0px) rotateY(0deg);
                opacity: 1;
            }
        }

        .item {
            width: 300px;
            padding: 30px;
            background-color: $itemBgColor;
            margin: 50px;
            border-radius: 10px;
            box-shadow: 5px 5px 20px rgba(0,0,0,0.2);

            transform: translate(0,100px) rotateY(180deg);
            transition: 0.4s;
            opacity: 0;

            // &:hover {
            //     background-color: #c8c8c8;
            // }

            h2 {
                font: bold 25px/1 "arial";
                margin-bottom: 20px;
                color: #333;

                @if $itemBgColor == #fff {
                    color: #333;
                } @else {
                    color: #fff;
                }

            }

            p {
                font:normal 16px/1.5 "arial";
                color: #777;

                @if $itemBgColor == #fff {
                    color: #777;
                } @else {
                    color: #ccc;
                }
            }

            a {
                @include btn();
            }

            $bgColors: (#74936d,darkkhaki,olive,#3d6043);

            @each $el in $bgColors {
                $index: index($bgColors, $el);
                &:nth-of-type(#{$index}) {
                    transition-delay: $interval * $index;
                    a {
                        @include btn($bgColor: $el);
                    }

                    // h2,p {
                    //     color: $el;
                    // }
                }
            }

            // @for $i from 1 to 5  {
            //     &:nth-of-type(#{$i}) {
            //         transition-delay: $interval * $i;
            //     }
            // }

            // &:nth-of-type(1) {
            //     transition-delay: .1s;
            // }
            // &:nth-of-type(2) {
            //     transition-delay: .2s;
            // }
            // &:nth-of-type(3) {
            //     transition-delay: .3s;
            // }
            // &:nth-of-type(4) {
            //     transition-delay: .4s;
            // }
        }
    }
}

